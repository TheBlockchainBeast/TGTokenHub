/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BondingCurve,
  BondingCurveInterface,
} from "../../contracts/BondingCurve";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "TokensBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BONUS_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "calculateTokensForEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasReceivedBonus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "uniqueBuyers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361002c565b600180556100273361002c565b61007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c058061008b6000396000f3fe6080604052600436106100c25760003560e01c806371fb18dd1161007f5780639dc29fac116100595780639dc29fac146101c9578063bfe590f8146101e9578063e4dc2aa414610234578063f2fde38b1461026157600080fd5b806371fb18dd1461015457806384cc315b146101815780638da5cb5b146101a157600080fd5b8063113990b8146100c757806322db4143146100f557806335ed3fd6146100f557806340c10f191461010a5780636c563f1f1461011f578063715018a61461013f575b600080fd5b3480156100d357600080fd5b506100e266038d7ea4c6800081565b6040519081526020015b60405180910390f35b34801561010157600080fd5b506100e2600a81565b61011d610118366004610a87565b610281565b005b34801561012b57600080fd5b506100e261013a366004610a87565b610594565b34801561014b57600080fd5b5061011d610604565b34801561016057600080fd5b506100e261016f366004610ab1565b60036020526000908152604090205481565b34801561018d57600080fd5b506100e261019c366004610ab1565b610618565b3480156101ad57600080fd5b506000546040516001600160a01b0390911681526020016100ec565b3480156101d557600080fd5b5061011d6101e4366004610a87565b61064d565b3480156101f557600080fd5b50610224610204366004610ad3565b600460209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ec565b34801561024057600080fd5b506100e261024f366004610ab1565b60026020526000908152604090205481565b34801561026d57600080fd5b5061011d61027c366004610ab1565b610896565b61028961090f565b600034116102ce5760405162461bcd60e51b815260206004820152600d60248201526c09aeae6e840e6cadcc8408aa89609b1b60448201526064015b60405180910390fd5b6000811161031e5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016102c5565b600061032983610618565b905060006103378383610b1c565b9050803410156103815760405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d08115512081cd95b9d605a1b60448201526064016102c5565b6001600160a01b038416600090815260036020526040812054600a1180156103cd57506001600160a01b038516600090815260046020908152604080832033845290915290205460ff16155b156104365760646103df600a86610b1c565b6103e99190610b33565b6001600160a01b03861660008181526004602090815260408083203384528252808320805460ff191660011790559282526003905290812080549293509061043083610b55565b91905055505b6104408185610b6e565b6001600160a01b03861660009081526002602052604081208054909190610468908490610b6e565b90915550506001600160a01b03851663a9059cbb336104878488610b6e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610b81565b508134111561053757336108fc61050d8434610ba3565b6040518115909202916000818181858888f19350505050158015610535573d6000803e3d6000fd5b505b336001600160a01b0386167fe456f0d575ef17126ead0c00ffd703adb3aa7b837d5b32ae967c707f804fa86761056d8488610b6e565b60408051918252602082018890520160405180910390a350505061059060018055565b5050565b6001600160a01b03821660009081526002602081905260408220549082906105ed9066038d7ea4c68000906105ca908790610b1c565b6105d49190610b33565b6105de8480610b1c565b6105e89190610b6e565b610968565b90506105f98282610ba3565b925050505b92915050565b61060c6109c1565b6106166000610a1b565b565b6001600160a01b03811660009081526002602052604081205466038d7ea4c680009061064390610968565b6105fe9190610b1c565b61065561090f565b600081116106a55760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016102c5565b6040516370a0823160e01b815233600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610bb6565b10156107545760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102c5565b600061075f83610618565b9050600061076d8383610b1c565b6001600160a01b03851660009081526002602052604081208054929350859290919061079a908490610ba3565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af11580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190610b81565b50604051339082156108fc029083906000818181858888f19350505050158015610844573d6000803e3d6000fd5b50604080518481526020810184905233916001600160a01b038716917fa1cc530db1096759b0a305536c2b0c4720f12253eaf87c79fa85436ef4cd591b910160405180910390a3505061059060018055565b61089e6109c1565b6001600160a01b0381166109035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c5565b61090c81610a1b565b50565b6002600154036109615760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102c5565b6002600155565b6000806002610978846001610b6e565b6109829190610b33565b90508291505b818110156109bb579050806002816109a08186610b33565b6109aa9190610b6e565b6109b49190610b33565b9050610988565b50919050565b6000546001600160a01b031633146106165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610a8257600080fd5b919050565b60008060408385031215610a9a57600080fd5b610aa383610a6b565b946020939093013593505050565b600060208284031215610ac357600080fd5b610acc82610a6b565b9392505050565b60008060408385031215610ae657600080fd5b610aef83610a6b565b9150610afd60208401610a6b565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105fe576105fe610b06565b600082610b5057634e487b7160e01b600052601260045260246000fd5b500490565b600060018201610b6757610b67610b06565b5060010190565b808201808211156105fe576105fe610b06565b600060208284031215610b9357600080fd5b81518015158114610acc57600080fd5b818103818111156105fe576105fe610b06565b600060208284031215610bc857600080fd5b505191905056fea2646970667358221220a6d4332af37046bd2f74b6d3062a1502ea6c4b91ce11c31214971fa192446b2764736f6c63430008180033";

type BondingCurveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BondingCurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BondingCurve__factory extends ContractFactory {
  constructor(...args: BondingCurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BondingCurve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BondingCurve__factory {
    return super.connect(runner) as BondingCurve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BondingCurveInterface {
    return new Interface(_abi) as BondingCurveInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BondingCurve {
    return new Contract(address, _abi, runner) as unknown as BondingCurve;
  }
}
